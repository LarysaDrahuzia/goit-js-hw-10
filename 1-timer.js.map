{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDateTime = document.querySelector('#datetime-picker');\nconst btnDateTime = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\n\nflatpickr(inputDateTime, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > this.defaultDate) {\n      userSelectedDate = selectedDates[0];\n      btnDateTime.disabled = false;\n      iziToast.success({\n        title: 'Success',\n        message: 'Valid date selected',\n      });\n    } else {\n      btnDateTime.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst addLeadingZero = value => value.toString().padStart(2, '0');\n\nbtnDateTime.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  clearInterval(timerBack);\n\n  const timerBack = setInterval(() => {\n    const nowDate = new Date();\n    const timeResult = userSelectedDate - nowDate;\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n\n    if (timeResult <= 0) {\n      clearInterval(timerBack);\n      daysEl.textContent =\n        hoursEl.textContent =\n        minutesEl.textContent =\n        secondsEl.textContent =\n          '00';\n      return;\n    }\n  }, 1000);\n});\n"],"names":["inputDateTime","btnDateTime","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","flatpickr","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","timerBack","timeResult"],"mappings":"+IAMA,MAAMA,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KAEvBC,EAAUP,EAAe,CACvB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,aAC1BF,EAAmBE,EAAc,CAAC,EAClCP,EAAY,SAAW,GACvBQ,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qBACjB,CAAO,IAEDR,EAAY,SAAW,GACvBQ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAEJ,CACH,CAAC,EAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,MAAMC,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhEhB,EAAY,iBAAiB,QAAS,IAAM,CAC1C,GAAI,CAACK,EAAkB,OAEvB,cAAcY,CAAS,EAEvB,MAAMA,EAAY,YAAY,IAAM,CAElC,MAAMC,EAAab,EADH,IAAI,KAGd,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAU,QAAQ,EAO5D,GALAR,EAAO,YAAcc,EAAeJ,CAAI,EACxCT,EAAQ,YAAca,EAAeH,CAAK,EAC1CT,EAAU,YAAcY,EAAeF,CAAO,EAC9CT,EAAU,YAAcW,EAAeD,CAAO,EAE1CI,GAAc,EAAG,CACnB,cAAcD,CAAS,EACvBhB,EAAO,YACLC,EAAQ,YACRC,EAAU,YACVC,EAAU,YACR,KACJ,MACD,CACF,EAAE,GAAI,CACT,CAAC"}